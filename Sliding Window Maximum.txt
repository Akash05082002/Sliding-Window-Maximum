class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if(nums.length==0 || k<=0) return new int[0];
        int []res=new int[nums.length-k+1];
        int idx=0;

	// store index of array nums
        Deque<Integer> dq=new ArrayDeque<>();
        
        for(int i=0;i<nums.length;i++)
        {
	    // remove numbers out of range k
            if(!dq.isEmpty() && dq.peek()<i-k+1)
                dq.pop();

	   // remove smaller numbers in k range as they are useless
            while(!dq.isEmpty() && nums[dq.peekLast()]<nums[i])
                dq.pollLast();
            dq.offer(i);
            if(i>=k-1)
                res[idx++]=nums[dq.peek()];
        }
        return res;
       
    }
}